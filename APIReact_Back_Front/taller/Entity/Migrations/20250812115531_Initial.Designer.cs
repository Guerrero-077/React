// <auto-generated />
using System;
using Entity.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250812115531_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Domain.Models.Implements.Form", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("id");

                    b.ToTable("forms");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Form Update User",
                            is_deleted = false,
                            name = "Form User"
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Form Create Rol",
                            is_deleted = false,
                            name = "Form Rol"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.FormModule", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("formid")
                        .HasColumnType("int");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<int>("moduleid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("formid");

                    b.HasIndex("moduleid");

                    b.ToTable("form_modules");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            formid = 1,
                            is_deleted = false,
                            moduleid = 1
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            formid = 2,
                            is_deleted = false,
                            moduleid = 2
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Module", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("id");

                    b.ToTable("modules");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Module for User",
                            is_deleted = false,
                            name = "Module User"
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Module for Rol",
                            is_deleted = false,
                            name = "Module Rol"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Permission", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("id");

                    b.ToTable("permissions");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Permiso de creacion",
                            is_deleted = false,
                            name = "Crear"
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Permiso de borrar",
                            is_deleted = false,
                            name = "Borrar"
                        },
                        new
                        {
                            id = 3,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Permiso de Actualizar",
                            is_deleted = false,
                            name = "Actualizar"
                        },
                        new
                        {
                            id = 4,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Permiso de Leer",
                            is_deleted = false,
                            name = "Leer"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Person", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("address")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("firstName")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("varchar(20)");

                    b.HasKey("id");

                    b.ToTable("persons");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            address = "AV SiempreViva",
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            firstName = "Admin",
                            is_deleted = false,
                            lastName = "Admin",
                            phoneNumber = "1234567890"
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            address = "AV SiempreViva",
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            firstName = "User",
                            is_deleted = false,
                            lastName = "User",
                            phoneNumber = "1234567890"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Rol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("id");

                    b.ToTable("rols");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Rol con permisos administrativos",
                            is_deleted = false,
                            name = "Administrador"
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Rol con permisos de usuario",
                            is_deleted = false,
                            name = "Usuario"
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.RolFormPermission", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("formid")
                        .HasColumnType("int");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<int>("permissionid")
                        .HasColumnType("int");

                    b.Property<int>("rolid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("formid");

                    b.HasIndex("permissionid");

                    b.HasIndex("rolid");

                    b.ToTable("rol_form_permissions");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            formid = 1,
                            is_deleted = false,
                            permissionid = 1,
                            rolid = 1
                        },
                        new
                        {
                            id = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            formid = 2,
                            is_deleted = false,
                            permissionid = 2,
                            rolid = 2
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("password")
                        .HasColumnType("varchar(100)");

                    b.HasKey("id");

                    b.HasIndex("PersonId")
                        .IsUnique()
                        .HasFilter("[PersonId] IS NOT NULL");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            id = 1,
                            PersonId = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "admin@example.com",
                            is_deleted = false,
                            name = "admin",
                            password = "admin123"
                        },
                        new
                        {
                            id = 2,
                            PersonId = 2,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "User@example.com",
                            is_deleted = false,
                            name = "User",
                            password = "user123"
                        });
                });

            modelBuilder.Entity("RolUser", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("bit");

                    b.Property<int>("rolId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("rolId");

                    b.HasIndex("userId");

                    b.ToTable("rolUsers");

                    b.HasData(
                        new
                        {
                            id = 1,
                            active = true,
                            created_date = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            is_deleted = false,
                            rolId = 1,
                            userId = 1
                        });
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.FormModule", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Form", "form")
                        .WithMany("FormModules")
                        .HasForeignKey("formid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Module", "module")
                        .WithMany("FormModules")
                        .HasForeignKey("moduleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("form");

                    b.Navigation("module");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.RolFormPermission", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Form", "form")
                        .WithMany("rol_form_permission")
                        .HasForeignKey("formid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Permission", "permission")
                        .WithMany("rol_form_permission")
                        .HasForeignKey("permissionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.Rol", "rol")
                        .WithMany()
                        .HasForeignKey("rolid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("form");

                    b.Navigation("permission");

                    b.Navigation("rol");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.User", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Person", "Person")
                        .WithOne("User")
                        .HasForeignKey("Entity.Domain.Models.Implements.User", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Person");
                });

            modelBuilder.Entity("RolUser", b =>
                {
                    b.HasOne("Entity.Domain.Models.Implements.Rol", "rol")
                        .WithMany("rolUsers")
                        .HasForeignKey("rolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Domain.Models.Implements.User", "user")
                        .WithMany("rolUsers")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rol");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Form", b =>
                {
                    b.Navigation("FormModules");

                    b.Navigation("rol_form_permission");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Module", b =>
                {
                    b.Navigation("FormModules");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Permission", b =>
                {
                    b.Navigation("rol_form_permission");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Person", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.Rol", b =>
                {
                    b.Navigation("rolUsers");
                });

            modelBuilder.Entity("Entity.Domain.Models.Implements.User", b =>
                {
                    b.Navigation("rolUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
